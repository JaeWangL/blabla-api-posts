plugins {
    id "com.microsoft.azure.azurewebapp" version "1.3.0"
    id "com.google.cloud.tools.jib" version "3.2.0"
}

bootJar {
    destinationDirectory.set(file("$projectDir"))
    archiveFileName = "app.jar"
}

azurewebapp {
    resourceGroup = 'smartgeo-test'
    appName = 'BlaBlaPosts'
}

jib {
    from {
        image='mcr.microsoft.com/java/jre:17-zulu-alpine'
    }
    to {
        image="${dockerPrefix}/${project.name}/${project.version.toString().toLowerCase()}"
        tags=['latest']
    }
    container {
        mainClass='com.blabla.posts.api.PostsApiApplication'
        creationTime='USE_CURRENT_TIMESTAMP'
        environment=[USE_PROFILE: 'prod', PORT: '8080']
        jvmFlags = ['-Dspring.profiles.active=${USE_PROFILE}', '-Dserver.port=${PORT}', '-Dfile.encoding=UTF-8']
        ports = ['8080']
        labels = [maintainer: "JaeWang Lee <jnso5072@outlook.kr>"]
    }
}

dependencies {
    implementation project(path: ":posts-common")

    // Spring
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // Service discovery
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // Centralized configuration
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-kafka'

    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // JPA + DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'mysql:mysql-connector-java'

    // Command bus
    implementation 'net.sizovs:pipelinr:0.7'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
}
